# Copyright 2019 The Dawn Authors
# Copyright 2021 The WebNN-native Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("../../../scripts/webnn_overrides_with_defaults.gni")

import("${dawn_root}/scripts/dawn_component.gni")
import("${webnn_root}/generator/webnn_generator.gni")

# Public webnn_wire headers so they can be publically visible for
# dependencies of webnn_wire
source_set("headers") {
  public_deps = [ "${webnn_root}/include/webnn:headers" ]
  all_dependent_configs = [ "${webnn_root}/include/webnn:public" ]
  sources = [
    "${webnn_root}/include/webnn/wire/Wire.h",
    "${webnn_root}/include/webnn/wire/WireClient.h",
    "${webnn_root}/include/webnn/wire/WireServer.h",
    "${webnn_root}/include/webnn/wire/webnn_wire_export.h",
  ]
}

webnn_json_generator("gen") {
  target = "wire"
  outputs = [
    "src/webnn/wire/ObjectType_autogen.h",
    "src/webnn/wire/WireCmd_autogen.cpp",
    "src/webnn/wire/WireCmd_autogen.h",
    "src/webnn/wire/client/ApiObjects_autogen.h",
    "src/webnn/wire/client/ApiProcs_autogen.cpp",
    "src/webnn/wire/client/ClientBase_autogen.h",
    "src/webnn/wire/client/ClientHandlers_autogen.cpp",
    "src/webnn/wire/client/ClientPrototypes_autogen.inc",
    "src/webnn/wire/server/ServerBase_autogen.h",
    "src/webnn/wire/server/ServerDoers_autogen.cpp",
    "src/webnn/wire/server/ServerHandlers_autogen.cpp",
    "src/webnn/wire/server/ServerPrototypes_autogen.inc",
  ]
}

dawn_component("webnn_wire") {
  DEFINE_PREFIX = "WEBNN_WIRE"

  deps = [
    ":gen",
    "${webnn_root}/src/webnn/common",
  ]

  configs = [ "${webnn_root}/src/webnn/common:internal_config" ]
  sources = get_target_outputs(":gen")
  sources += [
    "BufferConsumer.h",
    "BufferConsumer_impl.h",
    "ChunkedCommandHandler.cpp",
    "ChunkedCommandHandler.h",
    "ChunkedCommandSerializer.cpp",
    "ChunkedCommandSerializer.h",
    "WireClient.cpp",
    "Wire.cpp",
    "WireDeserializeAllocator.cpp",
    "WireDeserializeAllocator.h",
    "WireServer.cpp",
    "WireResult.h",
    "client/ApiObjects.h",
    "client/Client.cpp",
    "client/Client.h",
    "client/ClientDoers.cpp",
    "client/Context.cpp",
    "client/Context.h",
    "client/Graph.cpp",
    "client/Graph.h",
    "client/GraphBuilder.cpp",
    "client/GraphBuilder.h",
    "client/Instance.cpp",
    "client/Instance.h",
    "client/NamedInputs.cpp",
    "client/NamedInputs.h",
    "client/NamedOutputs.cpp",
    "client/NamedOutputs.h",
    "client/ObjectAllocator.h",
    "client/ObjectBase.h",
    "client/OperandArray.cpp",
    "client/OperandArray.h",
    "client/OperatorArray.cpp",
    "client/OperatorArray.h",
    "server/ObjectStorage.h",
    "server/Server.cpp",
    "server/Server.h",
    "server/ServerContext.cpp",
    "server/ServerGraph.cpp",
    "server/ServerGraphBuilder.cpp",
    "server/ServerInstance.cpp",
    "server/ServerNamedInputs.cpp",
    "server/ServerNamedOutputs.cpp",
    "server/ServerOperandArray.cpp",
    "server/ServerOperatorArray.cpp",
  ]

  if (build_with_chromium) {
    if (is_component_build) {
      libs = [ "dawn_wire.dll.lib" ]
    }
    deps += [ "${dawn_root}/src/dawn/wire" ]
  }

  # Make headers publicly visible
  public_deps = [ ":headers" ]
}
